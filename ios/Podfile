require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.0'

target 'CropRegistration' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false
  )

  target 'CropRegistrationTests' do
    inherit! :complete
    # Pods for testing
  end

use_flipper!({
  'Flipper' => '0.99.0',
  'Flipper-Folly' => '2.6.10',
  'Flipper-RSocket' => '1.4.3'
})

end

post_install do |installer|
  # 1) Standard React-Native post install
  react_native_post_install(installer)

  # 2) Raise iOS deployment target to 11.0 uniformly
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
      end
    end
  end

  # 3) Strip bitcode from legacy .xcframework slices
   # Strip bitcode from problematic frameworks
  bitcode_strip_path = `xcrun --find bitcode_strip`.chop!
  
  def strip_bitcode_from_framework(bitcode_strip_path, framework_relative_path)
    framework_path = File.join(Dir.pwd, framework_relative_path)
    if File.exist?(framework_path)
      puts "Stripping bitcode from #{framework_relative_path}"
      system("#{bitcode_strip_path} -r '#{framework_path}' -o '#{framework_path}'")
    end
  end
  
  # List of frameworks that need bitcode stripped
  frameworks_to_strip = [
    'Pods/OpenSSL-Universal/Frameworks/OpenSSL.xcframework/ios-arm64_armv7/OpenSSL.framework/OpenSSL',
    'Pods/Flipper-DoubleConversion/Frameworks/double-conversion.xcframework/ios-arm64_armv7/double-conversion.framework/double-conversion',
    'Pods/Flipper-Glog/Frameworks/glog.xcframework/ios-arm64_armv7/glog.framework/glog'
  ]
  
  frameworks_to_strip.each do |framework|
    strip_bitcode_from_framework(bitcode_strip_path, framework)
  end
  
  # Also ensure bitcode is disabled in build settings
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end
end